{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPivd11A5EplHTslduI6QN0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"qJesWmaNTNT4","executionInfo":{"status":"ok","timestamp":1689083086319,"user_tz":-330,"elapsed":824,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from sklearn.datasets import fetch_california_housing\n","df = fetch_california_housing()"],"metadata":{"id":"TcdpKnc6UBsZ","executionInfo":{"status":"ok","timestamp":1689083092257,"user_tz":-330,"elapsed":2871,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["dataset = pd.DataFrame(df.data)"],"metadata":{"id":"L0F-Cp-3U_IV","executionInfo":{"status":"ok","timestamp":1689083094598,"user_tz":-330,"elapsed":489,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["dataset\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"n0eMb-PsVSPt","executionInfo":{"status":"ok","timestamp":1689083097290,"user_tz":-330,"elapsed":10,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"80ab1eef-a273-41e5-fe25-4808dfc33231"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            0     1         2         3       4         5      6       7\n","0      8.3252  41.0  6.984127  1.023810   322.0  2.555556  37.88 -122.23\n","1      8.3014  21.0  6.238137  0.971880  2401.0  2.109842  37.86 -122.22\n","2      7.2574  52.0  8.288136  1.073446   496.0  2.802260  37.85 -122.24\n","3      5.6431  52.0  5.817352  1.073059   558.0  2.547945  37.85 -122.25\n","4      3.8462  52.0  6.281853  1.081081   565.0  2.181467  37.85 -122.25\n","...       ...   ...       ...       ...     ...       ...    ...     ...\n","20635  1.5603  25.0  5.045455  1.133333   845.0  2.560606  39.48 -121.09\n","20636  2.5568  18.0  6.114035  1.315789   356.0  3.122807  39.49 -121.21\n","20637  1.7000  17.0  5.205543  1.120092  1007.0  2.325635  39.43 -121.22\n","20638  1.8672  18.0  5.329513  1.171920   741.0  2.123209  39.43 -121.32\n","20639  2.3886  16.0  5.254717  1.162264  1387.0  2.616981  39.37 -121.24\n","\n","[20640 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-6a23d65b-4b98-4d8b-92b5-932d56f74bd7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20635</th>\n","      <td>1.5603</td>\n","      <td>25.0</td>\n","      <td>5.045455</td>\n","      <td>1.133333</td>\n","      <td>845.0</td>\n","      <td>2.560606</td>\n","      <td>39.48</td>\n","      <td>-121.09</td>\n","    </tr>\n","    <tr>\n","      <th>20636</th>\n","      <td>2.5568</td>\n","      <td>18.0</td>\n","      <td>6.114035</td>\n","      <td>1.315789</td>\n","      <td>356.0</td>\n","      <td>3.122807</td>\n","      <td>39.49</td>\n","      <td>-121.21</td>\n","    </tr>\n","    <tr>\n","      <th>20637</th>\n","      <td>1.7000</td>\n","      <td>17.0</td>\n","      <td>5.205543</td>\n","      <td>1.120092</td>\n","      <td>1007.0</td>\n","      <td>2.325635</td>\n","      <td>39.43</td>\n","      <td>-121.22</td>\n","    </tr>\n","    <tr>\n","      <th>20638</th>\n","      <td>1.8672</td>\n","      <td>18.0</td>\n","      <td>5.329513</td>\n","      <td>1.171920</td>\n","      <td>741.0</td>\n","      <td>2.123209</td>\n","      <td>39.43</td>\n","      <td>-121.32</td>\n","    </tr>\n","    <tr>\n","      <th>20639</th>\n","      <td>2.3886</td>\n","      <td>16.0</td>\n","      <td>5.254717</td>\n","      <td>1.162264</td>\n","      <td>1387.0</td>\n","      <td>2.616981</td>\n","      <td>39.37</td>\n","      <td>-121.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20640 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a23d65b-4b98-4d8b-92b5-932d56f74bd7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6c643826-c6fc-4cc1-84fa-fa3c41703555\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c643826-c6fc-4cc1-84fa-fa3c41703555')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6c643826-c6fc-4cc1-84fa-fa3c41703555 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6a23d65b-4b98-4d8b-92b5-932d56f74bd7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6a23d65b-4b98-4d8b-92b5-932d56f74bd7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["dataset.columns = df.feature_names"],"metadata":{"id":"1sOQAMQmVbFr","executionInfo":{"status":"ok","timestamp":1689083105774,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["dataset.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DnWZvsbOM78F","executionInfo":{"status":"ok","timestamp":1689083184016,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"dfef4e2f-6ccc-4d07-9b0e-78a043876857"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0  8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1  8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2  7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3  5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4  3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","\n","   Longitude  \n","0    -122.23  \n","1    -122.22  \n","2    -122.24  \n","3    -122.25  \n","4    -122.25  "],"text/html":["\n","\n","  <div id=\"df-ca8a8a8a-4b5d-459e-bd40-7638c87c8bf1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca8a8a8a-4b5d-459e-bd40-7638c87c8bf1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f0a9dca2-4468-44c0-9388-fd51dd0c03e7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0a9dca2-4468-44c0-9388-fd51dd0c03e7')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f0a9dca2-4468-44c0-9388-fd51dd0c03e7 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ca8a8a8a-4b5d-459e-bd40-7638c87c8bf1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ca8a8a8a-4b5d-459e-bd40-7638c87c8bf1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X = dataset\n","Y = df.target"],"metadata":{"id":"ldb_PiXqNT0U","executionInfo":{"status":"ok","timestamp":1689083310574,"user_tz":-330,"elapsed":498,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3jV40pNVNfsW","executionInfo":{"status":"ok","timestamp":1689083328476,"user_tz":-330,"elapsed":850,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"22df471d-96a0-455b-f58e-16f29bdbc733"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4.526, 3.585, 3.521, ..., 0.923, 0.847, 0.894])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["## train test split\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.30, random_state=42)"],"metadata":{"id":"nfgIHJj_PG32","executionInfo":{"status":"ok","timestamp":1689084227645,"user_tz":-330,"elapsed":518,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"G4B2Z5q8RE7Z","executionInfo":{"status":"ok","timestamp":1689084271477,"user_tz":-330,"elapsed":797,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"71ceda41-0f4a-4289-998b-4eba6c9f84ff"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","7061   4.1312      35.0  5.882353   0.975490      1218.0  2.985294     33.93   \n","14689  2.8631      20.0  4.401210   1.076613       999.0  2.014113     32.79   \n","17323  4.2026      24.0  5.617544   0.989474       731.0  2.564912     34.59   \n","10056  3.1094      14.0  5.869565   1.094203       302.0  2.188406     39.26   \n","15750  3.3068      52.0  4.801205   1.066265      1526.0  2.298193     37.77   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","11284  6.3700      35.0  6.129032   0.926267       658.0  3.032258     33.78   \n","11964  3.0500      33.0  6.868597   1.269488      1753.0  3.904232     34.02   \n","5390   2.9344      36.0  3.986717   1.079696      1756.0  3.332068     34.03   \n","860    5.7192      15.0  6.395349   1.067979      1777.0  3.178891     37.58   \n","15795  2.5755      52.0  3.402576   1.058776      2619.0  2.108696     37.77   \n","\n","       Longitude  \n","7061     -118.02  \n","14689    -117.09  \n","17323    -120.14  \n","10056    -121.00  \n","15750    -122.45  \n","...          ...  \n","11284    -117.96  \n","11964    -117.43  \n","5390     -118.38  \n","860      -121.96  \n","15795    -122.42  \n","\n","[14448 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-07d2a424-7fcf-4ab1-bb3e-e6189662cc08\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7061</th>\n","      <td>4.1312</td>\n","      <td>35.0</td>\n","      <td>5.882353</td>\n","      <td>0.975490</td>\n","      <td>1218.0</td>\n","      <td>2.985294</td>\n","      <td>33.93</td>\n","      <td>-118.02</td>\n","    </tr>\n","    <tr>\n","      <th>14689</th>\n","      <td>2.8631</td>\n","      <td>20.0</td>\n","      <td>4.401210</td>\n","      <td>1.076613</td>\n","      <td>999.0</td>\n","      <td>2.014113</td>\n","      <td>32.79</td>\n","      <td>-117.09</td>\n","    </tr>\n","    <tr>\n","      <th>17323</th>\n","      <td>4.2026</td>\n","      <td>24.0</td>\n","      <td>5.617544</td>\n","      <td>0.989474</td>\n","      <td>731.0</td>\n","      <td>2.564912</td>\n","      <td>34.59</td>\n","      <td>-120.14</td>\n","    </tr>\n","    <tr>\n","      <th>10056</th>\n","      <td>3.1094</td>\n","      <td>14.0</td>\n","      <td>5.869565</td>\n","      <td>1.094203</td>\n","      <td>302.0</td>\n","      <td>2.188406</td>\n","      <td>39.26</td>\n","      <td>-121.00</td>\n","    </tr>\n","    <tr>\n","      <th>15750</th>\n","      <td>3.3068</td>\n","      <td>52.0</td>\n","      <td>4.801205</td>\n","      <td>1.066265</td>\n","      <td>1526.0</td>\n","      <td>2.298193</td>\n","      <td>37.77</td>\n","      <td>-122.45</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>11284</th>\n","      <td>6.3700</td>\n","      <td>35.0</td>\n","      <td>6.129032</td>\n","      <td>0.926267</td>\n","      <td>658.0</td>\n","      <td>3.032258</td>\n","      <td>33.78</td>\n","      <td>-117.96</td>\n","    </tr>\n","    <tr>\n","      <th>11964</th>\n","      <td>3.0500</td>\n","      <td>33.0</td>\n","      <td>6.868597</td>\n","      <td>1.269488</td>\n","      <td>1753.0</td>\n","      <td>3.904232</td>\n","      <td>34.02</td>\n","      <td>-117.43</td>\n","    </tr>\n","    <tr>\n","      <th>5390</th>\n","      <td>2.9344</td>\n","      <td>36.0</td>\n","      <td>3.986717</td>\n","      <td>1.079696</td>\n","      <td>1756.0</td>\n","      <td>3.332068</td>\n","      <td>34.03</td>\n","      <td>-118.38</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>5.7192</td>\n","      <td>15.0</td>\n","      <td>6.395349</td>\n","      <td>1.067979</td>\n","      <td>1777.0</td>\n","      <td>3.178891</td>\n","      <td>37.58</td>\n","      <td>-121.96</td>\n","    </tr>\n","    <tr>\n","      <th>15795</th>\n","      <td>2.5755</td>\n","      <td>52.0</td>\n","      <td>3.402576</td>\n","      <td>1.058776</td>\n","      <td>2619.0</td>\n","      <td>2.108696</td>\n","      <td>37.77</td>\n","      <td>-122.42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14448 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07d2a424-7fcf-4ab1-bb3e-e6189662cc08')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-62c0be7d-b0ae-4139-b60c-884994168249\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62c0be7d-b0ae-4139-b60c-884994168249')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-62c0be7d-b0ae-4139-b60c-884994168249 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07d2a424-7fcf-4ab1-bb3e-e6189662cc08 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07d2a424-7fcf-4ab1-bb3e-e6189662cc08');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["## standardizing the dataset(we never transform the output features)\n","from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()"],"metadata":{"id":"lytoLjHrTrR1","executionInfo":{"status":"ok","timestamp":1689085591202,"user_tz":-330,"elapsed":481,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["X_train = scaler.fit_transform(X_train)"],"metadata":{"id":"RsmFcI9pUHM1","executionInfo":{"status":"ok","timestamp":1689085682953,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["X_test = scaler.transform(X_test)"],"metadata":{"id":"TtsRsI50WjCH","executionInfo":{"status":"ok","timestamp":1689085697188,"user_tz":-330,"elapsed":819,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["## tn convert the transformed dataset into previous form\n","## X_train = scaler.inverse_transform(X_train)"],"metadata":{"id":"qW86O2ghWmnb","executionInfo":{"status":"ok","timestamp":1689086114177,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","##CROSS VALIDATION\n","from sklearn.model_selection import cross_val_score"],"metadata":{"id":"a8Kxw-Z5YSGp","executionInfo":{"status":"ok","timestamp":1689090691486,"user_tz":-330,"elapsed":608,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["regression = LinearRegression()\n","regression.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"T7TE3JUDppRD","executionInfo":{"status":"ok","timestamp":1689091089009,"user_tz":-330,"elapsed":617,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"307f455e-4bf6-4f07-ab41-a109cb744248"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["mse= cross_val_score(regression, X_train, Y_train, scoring='neg_mean_squared_error', cv=5)\n"],"metadata":{"id":"5tEypDFXpvq0","executionInfo":{"status":"ok","timestamp":1689090915345,"user_tz":-330,"elapsed":839,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["np.mean(mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bPSruwwdqfyM","executionInfo":{"status":"ok","timestamp":1689090928753,"user_tz":-330,"elapsed":487,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"9f969a63-b83c-4b99-86df-b4c32195b33a"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.5268253746355749"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["##prediction\n","reg_pred = regression.predict(X_test)\n"],"metadata":{"id":"xfaSY5GgqkbR","executionInfo":{"status":"ok","timestamp":1689091181610,"user_tz":-330,"elapsed":644,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["reg_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XFmJkJNvrh8z","executionInfo":{"status":"ok","timestamp":1689091189981,"user_tz":-330,"elapsed":479,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"448e11e2-3648-4093-ec04-9f9ac4cc7049"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([75.39904685, 77.64758448, 81.9468823 , ..., 74.04218911,\n","       71.25418692, 74.51758511])"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.displot(reg_pred-Y_test , kind=\"kde\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"ZZCvvMpEryHG","executionInfo":{"status":"ok","timestamp":1689091335392,"user_tz":-330,"elapsed":1042,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"f852ea75-7cb8-48fa-f759-444dfa502be4"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f28f41c1060>"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","score = r2_score (reg_pred, Y_test)\n"],"metadata":{"id":"qFS3SWx4tcfe","executionInfo":{"status":"ok","timestamp":1689091871261,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"id":"z8KF2Qf1uJG3","executionInfo":{"status":"ok","timestamp":1689091876673,"user_tz":-330,"elapsed":825,"user":{"displayName":"Shubhi sahu","userId":"07360831433186155727"}},"outputId":"79c45e50-8945-48e6-9ec6-f645f36e926e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-759.6180217570045"]},"metadata":{},"execution_count":43}]}]}